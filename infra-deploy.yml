trigger:
  none

pool:
  name: 'Default'

variables:
  - group: rjtrailvariable
  - name: azureServiceConnection    
    value: 'rjsercon'
  - name: resourceGroupName
    value: 'rjtrailrg'
  - name: vnetTemplate
    value: 'Infra/vnet.bicep'
  - name: vmTemplate
    value: 'Infra/vm.bicep'

stages:
- stage: DeployInfrastructure
  displayName: 'Deploy VNet and VM using Bicep'
  jobs:
  - job: DeployResources
    displayName: 'Run Bicep deployments'
    steps:

    - task: AzureCLI@2
      displayName: 'Deploy VNet'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create \
            --resource-group $(resourceGroupName) \
            --template-file $(vnetTemplate) \
            --parameters location=$location
      env:
        location: $(location)
#      enabled: false

    - task: AzureCLI@2
      name: GetSubnetId
      displayName: 'Get Subnet ID'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          subnetId=$(az network vnet subnet show \
            --resource-group $(resourceGroupName) \
            --vnet-name rjVnet \
            --name rjSubnet \
            --query id -o tsv)
          echo "subnetId = $subnetId"
          echo "##vso[task.setvariable variable=subnetId;issecret=true]$subnetId"
      env:
        location: $(location)
#      enabled: false


    - task: AzureCLI@2
      displayName: 'Deploy Linux VM (Ubuntu)'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Validating Bicep..."
          az bicep build --file $VM_TEMPLATE

          echo "Deploying VM with the following parameters:"
          echo "  location      = $LOCATION"
          echo "  adminUsername = $ADMIN_USERNAME"
          echo "  subnetId      = $SUBNET_ID"

          az deployment group create \
            --resource-group $RESOURCE_GROUP \
            --template-file $VM_TEMPLATE \
            --parameters \
                  location=$LOCATION \
                  adminUsername=$ADMIN_USERNAME \
                  adminPassword="$ADMIN_PASSWORD" \
                  subnetId=$SUBNET_ID\
                  vmName="rjvm02"
                  
      env:
        LOCATION: $(location)
        ADMIN_USERNAME: $(adminUsername)
        ADMIN_PASSWORD: $(adminPassword)
        SUBNET_ID: '/subscriptions/2e07f3f2-99d7-4adf-add7-6beefc4a3b65/resourceGroups/rjtrailrg/providers/Microsoft.Network/virtualNetworks/rjVnet/subnets/rjSubnet'
        RESOURCE_GROUP: $(resourceGroupName)
        VM_TEMPLATE: $(vmTemplate)
        


#      inputs:
#        azureSubscription: $(azureServiceConnection)
#        scriptType: bash
#        scriptLocation: inlineScript
#        inlineScript: |
#          echo "location: $(location)"
#          echo "adminUsername: $(adminUsername)"
#          echo "adminPassword: $(adminPassword)"
#          echo "subnetId: $(subnetId)"
#
#          if [ -z "$(subnetId)" ]; then
#            echo "ERROR: subnetId is empty. Exiting."
#            exit 1
#          fi
#
#          az deployment group create \
#          --resource-group $(resourceGroupName) \
#          --template-file $(vmTemplate) \
#          --parameters location=$(location) \
#                     adminUsername=$(adminUsername) \
#                     adminPassword="$(adminPassword)" \
#                     subnetId=$(subnetId)
#      env:
#        location: $(location)
#        adminUsername: $(adminUsername)
#        adminPassword: $(adminPassword)
#        subnetId: $(subnetId)
#

#          az deployment group create \
#            --resource-group $(resourceGroupName) \
#            --template-file $(vmTemplate) \
#            --parameters \
#              location="$(location)" \
#              adminUsername="$(adminUsername)" \
#              adminPassword="$(adminPassword)" \
#              subnetId="$(subnetId)"
#      env:
#        location: $(location)
##        adminUsername: $(adminUsername)
##        adminPassword: $(adminPassword)